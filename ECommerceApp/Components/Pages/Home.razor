@page "/"
@using ECommerceApp.Services
@inject ProductService ProductService
@inject NavigationManager Navigation
@rendermode InteractiveServer
@if (selectedProduct == null)
{
    <div id="heelsCarousel" class="carousel slide mb-5" data-bs-ride="carousel">
        <div class="carousel-inner">

            <div class="carousel-item active">
                <img src="images/C1.jpg" class="d-block w-100" style="height: 400px; object-fit: cover;" alt="Banner 1">
                <div class="carousel-caption d-none d-md-block">
                    <h5>Elegant Heels Collection</h5>
                    <p>Step into style – limited time offers!</p>
                </div>
            </div>

            <div class="carousel-item">
                <img src="images/C5.jpg" class="d-block w-100" style="height: 400px; object-fit: cover;" alt="Banner 2">
                <div class="carousel-caption d-none d-md-block">
                    <h5>Comfort Meets Class</h5>
                    <p>Shop the new arrivals now.</p>
                </div>
            </div>

            <div class="carousel-item">
                <img src="images/C2.jpg" class="d-block w-100" style="height: 400px; object-fit: cover;" alt="Banner 3">
                <div class="carousel-caption d-none d-md-block">
                    <h5>Flash Sale</h5>
                    <p>Up to 50% off on selected items!</p>
                </div>
            </div>

        </div>

        <button class="carousel-control-prev" type="button" data-bs-target="#heelsCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#heelsCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        @foreach (var product in Products)
        {
            <div class="col">
                <div class="card h-100 bg-dark text-white border-0 shadow product-card" @onclick="() => OpenProductDetails(product)">
                    <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 220px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">$@product.Price</p>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="container mt-5">
        <button class="btn btn-outline-dark" @onclick="BackToProductsList">Back to Products</button>
        <div class="row">
            <div class="col-md-4">
                <img src="@selectedProduct.ImageUrl" class="img-fluid" alt="@selectedProduct.Name">
            </div>
            <div class="col-md-6">
                <h2 class="pname text-black" >@selectedProduct.Name</h2>
                <p class="price text-black">$@selectedProduct.Price</p>
                <p class="description text-black">@selectedProduct.Description</p>
                <button class="btn btn-dark" @onclick="() => OpenOrderForm(selectedProduct)">Order Now</button>
            </div>
        </div>
    </div>
}

@if (selectedProductForOrder != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.7);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content bg-dark text-white p-3">
                <div class="modal-body">
                    <OrderForm Product="selectedProductForOrder" OnOrderPlaced="HandleOrderPlaced" />
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Product> Products = new();
    private Product selectedProduct;
    private Product selectedProductForOrder;

    protected override void OnInitialized()
    {
        Products = ProductService.GetProducts();
    }

    private void OpenProductDetails(Product product)
    {
        selectedProduct = product;
    }

    private void BackToProductsList()
    {
        selectedProduct = null;
        Navigation.NavigateTo("/");
    }

    private void OpenOrderForm(Product product)
    {
        selectedProductForOrder = product;
        StateHasChanged();
    }
    private void HandleOrderPlaced()
    {
        selectedProductForOrder = null;
        selectedProduct = null;
        StateHasChanged(); 
    }
   
 

}
